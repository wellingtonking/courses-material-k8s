apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    charle: architecte
spec:
  selector:
    matchLabels:
      app: nginx-app
  replicas: 3
  template:

    metadata:
      labels:
        app: nginx-app
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports:
            - name: std-http-port
              containerPort: 80
            - name: admin-http-port
              containerPort: 8080
              protocol: TCP

          env:
            - name: DEMO
              value: "Hello"

          # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables
          envFrom:
            - secretRef:
                name: test-secret
            - configMapRef:
                name: test-configmap

            - name: IN_POD_ENABLE_SWITCH_A
              valueFrom:
                configMapKeyRef:
                  name: test-configmap
                  key: ENABLE_SWITCH_A
---

# https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/

apiVersion: v1
kind: Service
metadata:
  name: nginx-app-named-port-svc
spec:
  ports:
    - port: 80
      targetPort: std-http-port
  selector:
    app: nginx-app

---

apiVersion: v1
kind: Secret
metadata:
  name: test-secret
stringData:
  extra: abc

type: Opaque
type: kubernetes.io/basic-auth
type: kubernetes.io/ssh-auth
type: kubernetes.io/tls
type: bootstrap.kubernetes.io/token


---

# https://kubernetes.io/docs/concepts/configuration/configmap/#configmaps-and-pods

apiVersion: v1
kind: ConfigMap
metadata:
  name: test-configmap
data:
  ENABLE_SWITCH_A: "true"
  my_ini_file: |
    car.1.brand = Tesla
    car.1.autonomy = 550km
    car.2.brand = Mazda
    car.2.autonomy = 120km

---

apiVersion: v1
kind: Pod
metadata:
  name: mypod
spec:
  containers:
    - name: nginx
      image: nginx:stable-alpine
      volumeMounts:
        - name: test-configmap-reference
          mountPath: "/etc/test-configmap-reference"
          readOnly: true
  volumes:
    - name: test-configmap-reference
      configMap:
        name: test-configmap

---

# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
# https://blog.colinbreck.com/kubernetes-liveness-and-readiness-probes-how-to-avoid-shooting-yourself-in-the-foot/

apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-http
spec:
  containers:
    - name: liveness
      image: k8s.gcr.io/liveness
      args:
        - /server

      livenessProbe:
        exec:
          command:
            - cat
            - /tmp/healthy
        initialDelaySeconds: 3
        periodSeconds: 3

      livenessProbe:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 15
        periodSeconds: 20

      livenessProbe:
        httpGet:
          path: /healthz
          port: admin-http-port
        initialDelaySeconds: 15
        periodSeconds: 20

      readinessProbe:
        tcpSocket:
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 10
